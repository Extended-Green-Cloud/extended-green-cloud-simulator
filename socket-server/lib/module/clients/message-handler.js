"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleUpdateJobExecutionProportion = exports.handleSetClientJobTimeFrame = exports.handleSetClientJobStatus = exports.handleSetClientJobDurationMap = void 0;
var _constants = require("../../constants/constants");
var _agentUtils = require("../../utils/agent-utils");
var _clientsState = require("./clients-state");
var handleSetClientJobStatus = function handleSetClientJobStatus(msg) {
  var agent = (0, _agentUtils.getAgentByName)(_clientsState.CLIENTS_STATE.clients, msg.agentName);
  var jobStatus = msg.status;
  if (agent) {
    if (jobStatus === _constants.JOB_STATUSES.FAILED) {
      agent.status = jobStatus;
    }
    agent.status = jobStatus;
  }
};
exports.handleSetClientJobStatus = handleSetClientJobStatus;
var handleSetClientJobTimeFrame = function handleSetClientJobTimeFrame(msg) {
  var agent = (0, _agentUtils.getAgentByName)(_clientsState.CLIENTS_STATE.clients, msg.agentName);
  var _msg$data = msg.data,
    start = _msg$data.start,
    end = _msg$data.end;
  if (agent) {
    agent.job.start = start;
    agent.job.end = end;
  }
};
exports.handleSetClientJobTimeFrame = handleSetClientJobTimeFrame;
var handleSetClientJobDurationMap = function handleSetClientJobDurationMap(msg) {
  var agent = (0, _agentUtils.getAgentByName)(_clientsState.CLIENTS_STATE.clients, msg.agentName);
  if (agent) {
    agent.durationMap = msg.data;
  }
};
exports.handleSetClientJobDurationMap = handleSetClientJobDurationMap;
var handleUpdateJobExecutionProportion = function handleUpdateJobExecutionProportion(msg) {
  var agent = (0, _agentUtils.getAgentByName)(_clientsState.CLIENTS_STATE.clients, msg.agentName);
  var proportion = msg.data;
  if (agent) {
    agent.jobExecutionProportion = proportion;
  }
};
exports.handleUpdateJobExecutionProportion = handleUpdateJobExecutionProportion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29uc3RhbnRzIiwicmVxdWlyZSIsIl9hZ2VudFV0aWxzIiwiX2NsaWVudHNTdGF0ZSIsImhhbmRsZVNldENsaWVudEpvYlN0YXR1cyIsIm1zZyIsImFnZW50IiwiZ2V0QWdlbnRCeU5hbWUiLCJDTElFTlRTX1NUQVRFIiwiY2xpZW50cyIsImFnZW50TmFtZSIsImpvYlN0YXR1cyIsInN0YXR1cyIsIkpPQl9TVEFUVVNFUyIsIkZBSUxFRCIsImV4cG9ydHMiLCJoYW5kbGVTZXRDbGllbnRKb2JUaW1lRnJhbWUiLCJfbXNnJGRhdGEiLCJkYXRhIiwic3RhcnQiLCJlbmQiLCJqb2IiLCJoYW5kbGVTZXRDbGllbnRKb2JEdXJhdGlvbk1hcCIsImR1cmF0aW9uTWFwIiwiaGFuZGxlVXBkYXRlSm9iRXhlY3V0aW9uUHJvcG9ydGlvbiIsInByb3BvcnRpb24iLCJqb2JFeGVjdXRpb25Qcm9wb3J0aW9uIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZS9jbGllbnRzL21lc3NhZ2UtaGFuZGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKT0JfU1RBVFVTRVMgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBnZXRBZ2VudEJ5TmFtZSB9IGZyb20gXCIuLi8uLi91dGlscy9hZ2VudC11dGlsc1wiO1xyXG5pbXBvcnQgeyBDTElFTlRTX1NUQVRFLCBDbGllbnQgfSBmcm9tIFwiLi9jbGllbnRzLXN0YXRlXCI7XHJcblxyXG5jb25zdCBoYW5kbGVTZXRDbGllbnRKb2JTdGF0dXMgPSAobXNnKSA9PiB7XHJcblx0Y29uc3QgYWdlbnQgPSBnZXRBZ2VudEJ5TmFtZShDTElFTlRTX1NUQVRFLmNsaWVudHMsIG1zZy5hZ2VudE5hbWUpO1xyXG5cdGNvbnN0IGpvYlN0YXR1cyA9IG1zZy5zdGF0dXM7XHJcblxyXG5cdGlmIChhZ2VudCkge1xyXG5cdFx0aWYgKGpvYlN0YXR1cyA9PT0gSk9CX1NUQVRVU0VTLkZBSUxFRCkge1xyXG5cdFx0XHRhZ2VudC5zdGF0dXMgPSBqb2JTdGF0dXM7XHJcblx0XHR9XHJcblx0XHRhZ2VudC5zdGF0dXMgPSBqb2JTdGF0dXM7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlU2V0Q2xpZW50Sm9iVGltZUZyYW1lID0gKG1zZykgPT4ge1xyXG5cdGNvbnN0IGFnZW50ID0gZ2V0QWdlbnRCeU5hbWUoQ0xJRU5UU19TVEFURS5jbGllbnRzLCBtc2cuYWdlbnROYW1lKTtcclxuXHRjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IG1zZy5kYXRhO1xyXG5cclxuXHRpZiAoYWdlbnQpIHtcclxuXHRcdGFnZW50LmpvYi5zdGFydCA9IHN0YXJ0O1xyXG5cdFx0YWdlbnQuam9iLmVuZCA9IGVuZDtcclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVTZXRDbGllbnRKb2JEdXJhdGlvbk1hcCA9IChtc2cpID0+IHtcclxuXHRjb25zdCBhZ2VudCA9IGdldEFnZW50QnlOYW1lKENMSUVOVFNfU1RBVEUuY2xpZW50cywgbXNnLmFnZW50TmFtZSk7XHJcblxyXG5cdGlmIChhZ2VudCkge1xyXG5cdFx0YWdlbnQuZHVyYXRpb25NYXAgPSBtc2cuZGF0YTtcclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVVcGRhdGVKb2JFeGVjdXRpb25Qcm9wb3J0aW9uID0gKG1zZykgPT4ge1xyXG5cdGNvbnN0IGFnZW50OiBDbGllbnQgPSBnZXRBZ2VudEJ5TmFtZShDTElFTlRTX1NUQVRFLmNsaWVudHMsIG1zZy5hZ2VudE5hbWUpO1xyXG5cdGNvbnN0IHByb3BvcnRpb24gPSBtc2cuZGF0YTtcclxuXHJcblx0aWYgKGFnZW50KSB7XHJcblx0XHRhZ2VudC5qb2JFeGVjdXRpb25Qcm9wb3J0aW9uID0gcHJvcG9ydGlvbjtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQge1xyXG5cdGhhbmRsZVNldENsaWVudEpvYlN0YXR1cyxcclxuXHRoYW5kbGVTZXRDbGllbnRKb2JUaW1lRnJhbWUsXHJcblx0aGFuZGxlU2V0Q2xpZW50Sm9iRHVyYXRpb25NYXAsXHJcblx0aGFuZGxlVXBkYXRlSm9iRXhlY3V0aW9uUHJvcG9ydGlvbixcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxVQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxhQUFBLEdBQUFGLE9BQUE7QUFFQSxJQUFNRyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQXdCQSxDQUFJQyxHQUFHLEVBQUs7RUFDekMsSUFBTUMsS0FBSyxHQUFHLElBQUFDLDBCQUFjLEVBQUNDLDJCQUFhLENBQUNDLE9BQU8sRUFBRUosR0FBRyxDQUFDSyxTQUFTLENBQUM7RUFDbEUsSUFBTUMsU0FBUyxHQUFHTixHQUFHLENBQUNPLE1BQU07RUFFNUIsSUFBSU4sS0FBSyxFQUFFO0lBQ1YsSUFBSUssU0FBUyxLQUFLRSx1QkFBWSxDQUFDQyxNQUFNLEVBQUU7TUFDdENSLEtBQUssQ0FBQ00sTUFBTSxHQUFHRCxTQUFTO0lBQ3pCO0lBQ0FMLEtBQUssQ0FBQ00sTUFBTSxHQUFHRCxTQUFTO0VBQ3pCO0FBQ0QsQ0FBQztBQUFDSSxPQUFBLENBQUFYLHdCQUFBLEdBQUFBLHdCQUFBO0FBRUYsSUFBTVksMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUEyQkEsQ0FBSVgsR0FBRyxFQUFLO0VBQzVDLElBQU1DLEtBQUssR0FBRyxJQUFBQywwQkFBYyxFQUFDQywyQkFBYSxDQUFDQyxPQUFPLEVBQUVKLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDO0VBQ2xFLElBQUFPLFNBQUEsR0FBdUJaLEdBQUcsQ0FBQ2EsSUFBSTtJQUF2QkMsS0FBSyxHQUFBRixTQUFBLENBQUxFLEtBQUs7SUFBRUMsR0FBRyxHQUFBSCxTQUFBLENBQUhHLEdBQUc7RUFFbEIsSUFBSWQsS0FBSyxFQUFFO0lBQ1ZBLEtBQUssQ0FBQ2UsR0FBRyxDQUFDRixLQUFLLEdBQUdBLEtBQUs7SUFDdkJiLEtBQUssQ0FBQ2UsR0FBRyxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7RUFDcEI7QUFDRCxDQUFDO0FBQUNMLE9BQUEsQ0FBQUMsMkJBQUEsR0FBQUEsMkJBQUE7QUFFRixJQUFNTSw2QkFBNkIsR0FBRyxTQUFoQ0EsNkJBQTZCQSxDQUFJakIsR0FBRyxFQUFLO0VBQzlDLElBQU1DLEtBQUssR0FBRyxJQUFBQywwQkFBYyxFQUFDQywyQkFBYSxDQUFDQyxPQUFPLEVBQUVKLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDO0VBRWxFLElBQUlKLEtBQUssRUFBRTtJQUNWQSxLQUFLLENBQUNpQixXQUFXLEdBQUdsQixHQUFHLENBQUNhLElBQUk7RUFDN0I7QUFDRCxDQUFDO0FBQUNILE9BQUEsQ0FBQU8sNkJBQUEsR0FBQUEsNkJBQUE7QUFFRixJQUFNRSxrQ0FBa0MsR0FBRyxTQUFyQ0Esa0NBQWtDQSxDQUFJbkIsR0FBRyxFQUFLO0VBQ25ELElBQU1DLEtBQWEsR0FBRyxJQUFBQywwQkFBYyxFQUFDQywyQkFBYSxDQUFDQyxPQUFPLEVBQUVKLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDO0VBQzFFLElBQU1lLFVBQVUsR0FBR3BCLEdBQUcsQ0FBQ2EsSUFBSTtFQUUzQixJQUFJWixLQUFLLEVBQUU7SUFDVkEsS0FBSyxDQUFDb0Isc0JBQXNCLEdBQUdELFVBQVU7RUFDMUM7QUFDRCxDQUFDO0FBQUNWLE9BQUEsQ0FBQVMsa0NBQUEsR0FBQUEsa0NBQUEifQ==