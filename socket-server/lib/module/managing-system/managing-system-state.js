"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetManagingSystemState = exports.MANAGING_SYSTEM_STATE = exports.MANAGING_SYSTEM_REPORTS = void 0;
var LogType = function (LogType) {
  LogType[LogType["RECONFIGURE"] = 'RECONFIGURE'] = "RECONFIGURE";
  LogType[LogType["ADD_COMPONENT"] = 'ADD_COMPONENT'] = "ADD_COMPONENT";
  LogType[LogType["REMOVE_COMPONENT"] = 'REMOVE_COMPONENT'] = "REMOVE_COMPONENT";
  return LogType;
}(LogType || {});
var MANAGING_SYSTEM_REPORTS = {
  jobSuccessRatioReport: [],
  trafficDistributionReport: [],
  backUpPowerUsageReport: []
};
exports.MANAGING_SYSTEM_REPORTS = MANAGING_SYSTEM_REPORTS;
var MANAGING_SYSTEM_STATE = {
  systemIndicator: 0,
  goalQualityIndicators: [],
  performedAdaptations: 0,
  weakAdaptations: 0,
  strongAdaptations: 0,
  adaptationLogs: [],
  adaptationGoals: []
};
exports.MANAGING_SYSTEM_STATE = MANAGING_SYSTEM_STATE;
var resetManagingSystemState = function resetManagingSystemState() {
  return Object.assign(MANAGING_SYSTEM_STATE, {
    systemIndicator: 0,
    goalQualityIndicators: [],
    performedAdaptations: 0,
    weakAdaptations: 0,
    strongAdaptations: 0,
    adaptationLogs: [],
    adaptationGoals: []
  });
};
exports.resetManagingSystemState = resetManagingSystemState;
var resetManagingSystemReportsState = function resetManagingSystemReportsState() {
  return Object.assign(MANAGING_SYSTEM_REPORTS, {
    jobSuccessRatioReport: [],
    trafficDistributionReport: [],
    backUpPowerUsageReport: []
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2dUeXBlIiwiTUFOQUdJTkdfU1lTVEVNX1JFUE9SVFMiLCJqb2JTdWNjZXNzUmF0aW9SZXBvcnQiLCJ0cmFmZmljRGlzdHJpYnV0aW9uUmVwb3J0IiwiYmFja1VwUG93ZXJVc2FnZVJlcG9ydCIsImV4cG9ydHMiLCJNQU5BR0lOR19TWVNURU1fU1RBVEUiLCJzeXN0ZW1JbmRpY2F0b3IiLCJnb2FsUXVhbGl0eUluZGljYXRvcnMiLCJwZXJmb3JtZWRBZGFwdGF0aW9ucyIsIndlYWtBZGFwdGF0aW9ucyIsInN0cm9uZ0FkYXB0YXRpb25zIiwiYWRhcHRhdGlvbkxvZ3MiLCJhZGFwdGF0aW9uR29hbHMiLCJyZXNldE1hbmFnaW5nU3lzdGVtU3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJyZXNldE1hbmFnaW5nU3lzdGVtUmVwb3J0c1N0YXRlIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZS9tYW5hZ2luZy1zeXN0ZW0vbWFuYWdpbmctc3lzdGVtLXN0YXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcG9ydEVudHJ5IH0gZnJvbSBcIi4uLy4uL3R5cGVzXCJcclxuXHJcbnR5cGUgQWRhcHRhdGlvbkdvYWxRdWFsaXR5ID0ge1xyXG4gICAgaWQ6IG51bWJlclxyXG4gICAgcXVhbGl0eTogbnVtYmVyXHJcbn1cclxuXHJcbmVudW0gTG9nVHlwZSB7XHJcbiAgICBSRUNPTkZJR1VSRSA9ICdSRUNPTkZJR1VSRScgYXMgYW55LFxyXG4gICAgQUREX0NPTVBPTkVOVCA9ICdBRERfQ09NUE9ORU5UJyBhcyBhbnksXHJcbiAgICBSRU1PVkVfQ09NUE9ORU5UID0gJ1JFTU9WRV9DT01QT05FTlQnIGFzIGFueSxcclxufVxyXG5cclxudHlwZSBBZGFwdGF0aW9uTG9nID0ge1xyXG4gICAgdHlwZTogTG9nVHlwZVxyXG4gICAgZGVzY3JpcHRpb246IHN0cmluZ1xyXG4gICAgYWdlbnROYW1lPzogc3RyaW5nXHJcbiAgICB0aW1lOiBudW1iZXJcclxufVxyXG5cclxudHlwZSBBZGFwdGF0aW9uR29hbCA9IHtcclxuICAgIGlkOiBudW1iZXJcclxuICAgIG5hbWU6IHN0cmluZ1xyXG4gICAgdGhyZXNob2xkOiBudW1iZXJcclxuICAgIGlzQWJvdmVUaHJlc2hvbGQ6IGJvb2xlYW5cclxuICAgIHdlaWdodDogbnVtYmVyXHJcbn1cclxuXHJcblxyXG5pbnRlcmZhY2UgTWFuYWdpbmdTeXN0ZW1TdGF0ZSB7XHJcbiAgICBzeXN0ZW1JbmRpY2F0b3I6IG51bWJlclxyXG4gICAgZ29hbFF1YWxpdHlJbmRpY2F0b3JzOiBBZGFwdGF0aW9uR29hbFF1YWxpdHlbXVxyXG4gICAgcGVyZm9ybWVkQWRhcHRhdGlvbnM6IG51bWJlclxyXG4gICAgd2Vha0FkYXB0YXRpb25zOiBudW1iZXJcclxuICAgIHN0cm9uZ0FkYXB0YXRpb25zOiBudW1iZXJcclxuICAgIGFkYXB0YXRpb25Mb2dzOiBBZGFwdGF0aW9uTG9nW11cclxuICAgIGFkYXB0YXRpb25Hb2FsczogQWRhcHRhdGlvbkdvYWxbXVxyXG59XHJcblxyXG5pbnRlcmZhY2UgTWFuYWdpbmdTeXN0ZW1SZXBvcnRzU3RhdGUge1xyXG4gICAgam9iU3VjY2Vzc1JhdGlvUmVwb3J0OiBSZXBvcnRFbnRyeVtdXHJcbiAgICB0cmFmZmljRGlzdHJpYnV0aW9uUmVwb3J0OiBSZXBvcnRFbnRyeVtdXHJcbiAgICBiYWNrVXBQb3dlclVzYWdlUmVwb3J0OiBSZXBvcnRFbnRyeVtdXHJcbn1cclxuXHJcbmxldCBNQU5BR0lOR19TWVNURU1fUkVQT1JUUzogTWFuYWdpbmdTeXN0ZW1SZXBvcnRzU3RhdGUgPSB7XHJcbiAgICBqb2JTdWNjZXNzUmF0aW9SZXBvcnQ6IFtdLFxyXG4gICAgdHJhZmZpY0Rpc3RyaWJ1dGlvblJlcG9ydDogW10sXHJcbiAgICBiYWNrVXBQb3dlclVzYWdlUmVwb3J0OiBbXVxyXG59XHJcblxyXG5sZXQgTUFOQUdJTkdfU1lTVEVNX1NUQVRFOiBNYW5hZ2luZ1N5c3RlbVN0YXRlID0ge1xyXG4gICAgc3lzdGVtSW5kaWNhdG9yOiAwLFxyXG4gICAgZ29hbFF1YWxpdHlJbmRpY2F0b3JzOiBbXSxcclxuICAgIHBlcmZvcm1lZEFkYXB0YXRpb25zOiAwLFxyXG4gICAgd2Vha0FkYXB0YXRpb25zOiAwLFxyXG4gICAgc3Ryb25nQWRhcHRhdGlvbnM6IDAsXHJcbiAgICBhZGFwdGF0aW9uTG9nczogW10sXHJcbiAgICBhZGFwdGF0aW9uR29hbHM6IFtdXHJcbn1cclxuXHJcbmNvbnN0IHJlc2V0TWFuYWdpbmdTeXN0ZW1TdGF0ZSA9ICgpID0+XHJcbiAgICBPYmplY3QuYXNzaWduKE1BTkFHSU5HX1NZU1RFTV9TVEFURSxcclxuICAgICAgICAoe1xyXG4gICAgICAgICAgICBzeXN0ZW1JbmRpY2F0b3I6IDAsXHJcbiAgICAgICAgICAgIGdvYWxRdWFsaXR5SW5kaWNhdG9yczogW10sXHJcbiAgICAgICAgICAgIHBlcmZvcm1lZEFkYXB0YXRpb25zOiAwLFxyXG4gICAgICAgICAgICB3ZWFrQWRhcHRhdGlvbnM6IDAsXHJcbiAgICAgICAgICAgIHN0cm9uZ0FkYXB0YXRpb25zOiAwLFxyXG4gICAgICAgICAgICBhZGFwdGF0aW9uTG9nczogW10sXHJcbiAgICAgICAgICAgIGFkYXB0YXRpb25Hb2FsczogW11cclxuICAgICAgICB9KSlcclxuXHJcbmNvbnN0IHJlc2V0TWFuYWdpbmdTeXN0ZW1SZXBvcnRzU3RhdGUgPSAoKSA9PlxyXG4gICAgT2JqZWN0LmFzc2lnbihNQU5BR0lOR19TWVNURU1fUkVQT1JUUyxcclxuICAgICAgICAoe1xyXG4gICAgICAgICAgICBqb2JTdWNjZXNzUmF0aW9SZXBvcnQ6IFtdLFxyXG4gICAgICAgICAgICB0cmFmZmljRGlzdHJpYnV0aW9uUmVwb3J0OiBbXSxcclxuICAgICAgICAgICAgYmFja1VwUG93ZXJVc2FnZVJlcG9ydDogW11cclxuICAgICAgICB9KSlcclxuXHJcbmV4cG9ydCB7XHJcbiAgICBBZGFwdGF0aW9uR29hbCxcclxuICAgIEFkYXB0YXRpb25Hb2FsUXVhbGl0eSxcclxuICAgIEFkYXB0YXRpb25Mb2csXHJcbiAgICBNYW5hZ2luZ1N5c3RlbVN0YXRlLFxyXG4gICAgTUFOQUdJTkdfU1lTVEVNX1NUQVRFLFxyXG4gICAgTUFOQUdJTkdfU1lTVEVNX1JFUE9SVFMsXHJcbiAgICByZXNldE1hbmFnaW5nU3lzdGVtU3RhdGVcclxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBT0tBLE9BQU8sYUFBUEEsT0FBTztFQUFQQSxPQUFPLENBQVBBLE9BQU8sa0JBQ00sYUFBYTtFQUQxQkEsT0FBTyxDQUFQQSxPQUFPLG9CQUVRLGVBQWU7RUFGOUJBLE9BQU8sQ0FBUEEsT0FBTyx1QkFHVyxrQkFBa0I7RUFBQSxPQUhwQ0EsT0FBTztBQUFBLEVBQVBBLE9BQU87QUFzQ1osSUFBSUMsdUJBQW1ELEdBQUc7RUFDdERDLHFCQUFxQixFQUFFLEVBQUU7RUFDekJDLHlCQUF5QixFQUFFLEVBQUU7RUFDN0JDLHNCQUFzQixFQUFFO0FBQzVCLENBQUM7QUFBQUMsT0FBQSxDQUFBSix1QkFBQSxHQUFBQSx1QkFBQTtBQUVELElBQUlLLHFCQUEwQyxHQUFHO0VBQzdDQyxlQUFlLEVBQUUsQ0FBQztFQUNsQkMscUJBQXFCLEVBQUUsRUFBRTtFQUN6QkMsb0JBQW9CLEVBQUUsQ0FBQztFQUN2QkMsZUFBZSxFQUFFLENBQUM7RUFDbEJDLGlCQUFpQixFQUFFLENBQUM7RUFDcEJDLGNBQWMsRUFBRSxFQUFFO0VBQ2xCQyxlQUFlLEVBQUU7QUFDckIsQ0FBQztBQUFBUixPQUFBLENBQUFDLHFCQUFBLEdBQUFBLHFCQUFBO0FBRUQsSUFBTVEsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUF3QkEsQ0FBQTtFQUFBLE9BQzFCQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ1YscUJBQXFCLEVBQzlCO0lBQ0dDLGVBQWUsRUFBRSxDQUFDO0lBQ2xCQyxxQkFBcUIsRUFBRSxFQUFFO0lBQ3pCQyxvQkFBb0IsRUFBRSxDQUFDO0lBQ3ZCQyxlQUFlLEVBQUUsQ0FBQztJQUNsQkMsaUJBQWlCLEVBQUUsQ0FBQztJQUNwQkMsY0FBYyxFQUFFLEVBQUU7SUFDbEJDLGVBQWUsRUFBRTtFQUNyQixDQUFFLENBQUM7QUFBQTtBQUFBUixPQUFBLENBQUFTLHdCQUFBLEdBQUFBLHdCQUFBO0FBRVgsSUFBTUcsK0JBQStCLEdBQUcsU0FBbENBLCtCQUErQkEsQ0FBQTtFQUFBLE9BQ2pDRixNQUFNLENBQUNDLE1BQU0sQ0FBQ2YsdUJBQXVCLEVBQ2hDO0lBQ0dDLHFCQUFxQixFQUFFLEVBQUU7SUFDekJDLHlCQUF5QixFQUFFLEVBQUU7SUFDN0JDLHNCQUFzQixFQUFFO0VBQzVCLENBQUUsQ0FBQztBQUFBIn0=