"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handlePlannedJobs = exports.handleIncrementFinishJobs = exports.handleIncrementFinishInCloudJobs = exports.handleIncrementFailedJobs = exports.handleExecutedJobs = exports.handleExecutedInCloudJobs = exports.handleCurrentClientsNumber = void 0;
var _networkState = require("./network-state");
var handleIncrementFinishJobs = function handleIncrementFinishJobs(msg) {
  return _networkState.NETWORK_STATE.finishedJobsNo += msg.data;
};
exports.handleIncrementFinishJobs = handleIncrementFinishJobs;
var handleIncrementFinishInCloudJobs = function handleIncrementFinishInCloudJobs(msg) {
  return _networkState.NETWORK_STATE.finishedJobsInCloudNo += msg.data;
};
exports.handleIncrementFinishInCloudJobs = handleIncrementFinishInCloudJobs;
var handleIncrementFailedJobs = function handleIncrementFailedJobs(msg) {
  return _networkState.NETWORK_STATE.failedJobsNo += msg.data;
};
exports.handleIncrementFailedJobs = handleIncrementFailedJobs;
var handlePlannedJobs = function handlePlannedJobs(msg) {
  return _networkState.NETWORK_STATE.currPlannedJobsNo += msg.data;
};
exports.handlePlannedJobs = handlePlannedJobs;
var handleExecutedJobs = function handleExecutedJobs(msg) {
  return _networkState.NETWORK_STATE.currActiveJobsNo += msg.data;
};
exports.handleExecutedJobs = handleExecutedJobs;
var handleExecutedInCloudJobs = function handleExecutedInCloudJobs(msg) {
  return _networkState.NETWORK_STATE.currActiveInCloudJobsNo += msg.data;
};
exports.handleExecutedInCloudJobs = handleExecutedInCloudJobs;
var handleCurrentClientsNumber = function handleCurrentClientsNumber(msg) {
  return _networkState.NETWORK_STATE.currClientsNo += msg.data;
};
exports.handleCurrentClientsNumber = handleCurrentClientsNumber;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmV0d29ya1N0YXRlIiwicmVxdWlyZSIsImhhbmRsZUluY3JlbWVudEZpbmlzaEpvYnMiLCJtc2ciLCJORVRXT1JLX1NUQVRFIiwiZmluaXNoZWRKb2JzTm8iLCJkYXRhIiwiZXhwb3J0cyIsImhhbmRsZUluY3JlbWVudEZpbmlzaEluQ2xvdWRKb2JzIiwiZmluaXNoZWRKb2JzSW5DbG91ZE5vIiwiaGFuZGxlSW5jcmVtZW50RmFpbGVkSm9icyIsImZhaWxlZEpvYnNObyIsImhhbmRsZVBsYW5uZWRKb2JzIiwiY3VyclBsYW5uZWRKb2JzTm8iLCJoYW5kbGVFeGVjdXRlZEpvYnMiLCJjdXJyQWN0aXZlSm9ic05vIiwiaGFuZGxlRXhlY3V0ZWRJbkNsb3VkSm9icyIsImN1cnJBY3RpdmVJbkNsb3VkSm9ic05vIiwiaGFuZGxlQ3VycmVudENsaWVudHNOdW1iZXIiLCJjdXJyQ2xpZW50c05vIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZS9uZXR3b3JrL21lc3NhZ2UtaGFuZGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVRXT1JLX1NUQVRFIH0gZnJvbSBcIi4vbmV0d29yay1zdGF0ZVwiO1xyXG5cclxuY29uc3QgaGFuZGxlSW5jcmVtZW50RmluaXNoSm9icyA9IChtc2cpID0+IChORVRXT1JLX1NUQVRFLmZpbmlzaGVkSm9ic05vICs9IG1zZy5kYXRhKTtcclxuY29uc3QgaGFuZGxlSW5jcmVtZW50RmluaXNoSW5DbG91ZEpvYnMgPSAobXNnKSA9PiAoTkVUV09SS19TVEFURS5maW5pc2hlZEpvYnNJbkNsb3VkTm8gKz0gbXNnLmRhdGEpO1xyXG5jb25zdCBoYW5kbGVJbmNyZW1lbnRGYWlsZWRKb2JzID0gKG1zZykgPT4gKE5FVFdPUktfU1RBVEUuZmFpbGVkSm9ic05vICs9IG1zZy5kYXRhKTtcclxuY29uc3QgaGFuZGxlUGxhbm5lZEpvYnMgPSAobXNnKSA9PiAoTkVUV09SS19TVEFURS5jdXJyUGxhbm5lZEpvYnNObyArPSBtc2cuZGF0YSk7XHJcbmNvbnN0IGhhbmRsZUV4ZWN1dGVkSm9icyA9IChtc2cpID0+IChORVRXT1JLX1NUQVRFLmN1cnJBY3RpdmVKb2JzTm8gKz0gbXNnLmRhdGEpO1xyXG5jb25zdCBoYW5kbGVFeGVjdXRlZEluQ2xvdWRKb2JzID0gKG1zZykgPT4gKE5FVFdPUktfU1RBVEUuY3VyckFjdGl2ZUluQ2xvdWRKb2JzTm8gKz0gbXNnLmRhdGEpO1xyXG5jb25zdCBoYW5kbGVDdXJyZW50Q2xpZW50c051bWJlciA9IChtc2cpID0+IChORVRXT1JLX1NUQVRFLmN1cnJDbGllbnRzTm8gKz0gbXNnLmRhdGEpO1xyXG5cclxuZXhwb3J0IHtcclxuXHRoYW5kbGVJbmNyZW1lbnRGaW5pc2hKb2JzLFxyXG5cdGhhbmRsZUluY3JlbWVudEZpbmlzaEluQ2xvdWRKb2JzLFxyXG5cdGhhbmRsZUluY3JlbWVudEZhaWxlZEpvYnMsXHJcblx0aGFuZGxlUGxhbm5lZEpvYnMsXHJcblx0aGFuZGxlRXhlY3V0ZWRKb2JzLFxyXG5cdGhhbmRsZUV4ZWN1dGVkSW5DbG91ZEpvYnMsXHJcblx0aGFuZGxlQ3VycmVudENsaWVudHNOdW1iZXIsXHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBTUMseUJBQXlCLEdBQUcsU0FBNUJBLHlCQUF5QkEsQ0FBSUMsR0FBRztFQUFBLE9BQU1DLDJCQUFhLENBQUNDLGNBQWMsSUFBSUYsR0FBRyxDQUFDRyxJQUFJO0FBQUEsQ0FBQztBQUFDQyxPQUFBLENBQUFMLHlCQUFBLEdBQUFBLHlCQUFBO0FBQ3RGLElBQU1NLGdDQUFnQyxHQUFHLFNBQW5DQSxnQ0FBZ0NBLENBQUlMLEdBQUc7RUFBQSxPQUFNQywyQkFBYSxDQUFDSyxxQkFBcUIsSUFBSU4sR0FBRyxDQUFDRyxJQUFJO0FBQUEsQ0FBQztBQUFDQyxPQUFBLENBQUFDLGdDQUFBLEdBQUFBLGdDQUFBO0FBQ3BHLElBQU1FLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBeUJBLENBQUlQLEdBQUc7RUFBQSxPQUFNQywyQkFBYSxDQUFDTyxZQUFZLElBQUlSLEdBQUcsQ0FBQ0csSUFBSTtBQUFBLENBQUM7QUFBQ0MsT0FBQSxDQUFBRyx5QkFBQSxHQUFBQSx5QkFBQTtBQUNwRixJQUFNRSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFJVCxHQUFHO0VBQUEsT0FBTUMsMkJBQWEsQ0FBQ1MsaUJBQWlCLElBQUlWLEdBQUcsQ0FBQ0csSUFBSTtBQUFBLENBQUM7QUFBQ0MsT0FBQSxDQUFBSyxpQkFBQSxHQUFBQSxpQkFBQTtBQUNqRixJQUFNRSxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFJWCxHQUFHO0VBQUEsT0FBTUMsMkJBQWEsQ0FBQ1csZ0JBQWdCLElBQUlaLEdBQUcsQ0FBQ0csSUFBSTtBQUFBLENBQUM7QUFBQ0MsT0FBQSxDQUFBTyxrQkFBQSxHQUFBQSxrQkFBQTtBQUNqRixJQUFNRSx5QkFBeUIsR0FBRyxTQUE1QkEseUJBQXlCQSxDQUFJYixHQUFHO0VBQUEsT0FBTUMsMkJBQWEsQ0FBQ2EsdUJBQXVCLElBQUlkLEdBQUcsQ0FBQ0csSUFBSTtBQUFBLENBQUM7QUFBQ0MsT0FBQSxDQUFBUyx5QkFBQSxHQUFBQSx5QkFBQTtBQUMvRixJQUFNRSwwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTBCQSxDQUFJZixHQUFHO0VBQUEsT0FBTUMsMkJBQWEsQ0FBQ2UsYUFBYSxJQUFJaEIsR0FBRyxDQUFDRyxJQUFJO0FBQUEsQ0FBQztBQUFDQyxPQUFBLENBQUFXLDBCQUFBLEdBQUFBLDBCQUFBIn0=