"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MESSAGE_HANDLERS = void 0;
var _module = require("../module");
var _messageHandlers = require("../module/agents/message-handlers");
var MESSAGE_HANDLERS = {
  INCREMENT_FINISHED_JOBS: _module.handleIncrementFinishJobs,
  INCREMENT_FINISHED_IN_CLOUD_JOBS: _module.handleIncrementFinishInCloudJobs,
  INCREMENT_FAILED_JOBS: _module.handleIncrementFailedJobs,
  INCREMENT_WEAK_ADAPTATIONS: _module.handleIncrementWeakAdaptations,
  INCREMENT_STRONG_ADAPTATIONS: _module.handleIncrementStrongAdaptations,
  UPDATE_JOB_QUEUE: _messageHandlers.handleUpdateJobQueue,
  UPDATE_SERVER_CONNECTION: _messageHandlers.handleUpdateServerConnection,
  UPDATE_INDICATORS: _module.handleUpdateIndicators,
  UPDATE_SCHEDULER_CPU_PRIORITY: _messageHandlers.handleUpdateCpuPriority,
  UPDATE_SCHEDULER_DEADLINE_PRIORITY: _messageHandlers.handleUpdateDeadlinePriority,
  UPDATE_CURRENT_CLIENTS: _module.handleCurrentClientsNumber,
  UPDATE_CURRENT_PLANNED_JOBS: _module.handlePlannedJobs,
  UPDATE_CURRENT_ACTIVE_JOBS: _module.handleExecutedJobs,
  UPDATE_CURRENT_IN_CLOUD_ACTIVE_JOBS: _module.handleExecutedInCloudJobs,
  SET_TRAFFIC: _messageHandlers.handleSetTraffic,
  SET_IS_ACTIVE: _messageHandlers.handleSetActive,
  SET_JOBS_COUNT: _messageHandlers.handleSetJobsCount,
  SET_ON_HOLD_JOBS_COUNT: _messageHandlers.handleSetJobsOnHold,
  SET_CLIENT_NUMBER: _messageHandlers.handleSetClientNumber,
  SET_CLIENT_JOB_STATUS: _module.handleSetClientJobStatus,
  SET_CLIENT_JOB_TIME_FRAME: _module.handleSetClientJobTimeFrame,
  SET_CLIENT_JOB_DURATION_MAP: _module.handleSetClientJobDurationMap,
  SET_SERVER_BACK_UP_TRAFFIC: _messageHandlers.handleSetBackUpTraffic,
  SET_JOB_SUCCESS_RATIO: _messageHandlers.handleSetSuccessRatio,
  SET_WEATHER_PREDICTION_ERROR: _messageHandlers.handleWeatherPredictionError,
  SET_AVAILABLE_GREEN_ENERGY: _messageHandlers.handleUpdateGreenEnergy,
  REGISTER_AGENT: _messageHandlers.handleRegisterAgent,
  REMOVE_AGENT: _messageHandlers.handleRemoveAgent,
  REGISTER_MANAGING: _module.handleRegisterGoals,
  ADD_ADAPTATION_LOG: _module.handleAddAdaptationLog,
  REPORT_SYSTEM_START_TIME: _module.handleSystemTimeMessage,
  DISABLE_SERVER: _messageHandlers.handleServerDisabling,
  ENABLE_SERVER: _messageHandlers.handleServerEnabling,
  UPDATE_ADAPTATION_ACTION: _module.handleUpdateAdaptationAction,
  UPDATE_SERVER_RESOURCES: _messageHandlers.handleUpdateResources,
  UPDATE_ENERGY_IN_USE: _messageHandlers.handleUpdateEnergyInUse,
  UPDATE_JOB_EXECUTION_PROPORTION: _module.handleUpdateJobExecutionProportion
};
exports.MESSAGE_HANDLERS = MESSAGE_HANDLERS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,